<%-- 
Name:  			C# giao dien quan ly danh sach (UserControl)
Author: 		To Van Chuong
Description: 	Tao mot giao dien quan ly danh sach tu table
Last Modified:	24-02-2014

--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Html" Src="" Inherits="CodeSmith.BaseTemplates.SqlCodeTemplate" Debug="False" Description="Template description here." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="Table that the object is based on." %>

<%@ Property Name="Inherits" Type="System.String" Default="project.web.Controls" Category="Context" Description="Duong dan va luu file" %>
<%@ Property Name="Author" Type="System.String" Default="To Van Chuong" Category="Style" Description="Author" %>

<%@ Property Name="TablePrefix" Type="System.String" Default="tbl_" Category="Style" Description="Table Prfix" %>
<%@ Property Name="RemoveEndingS" Type="System.Boolean" Default="true" Category="Style" Description="If table name ends in s, class name will not if this is set to true." %>

<%@ Property Name="GenerateWebControls" Type="System.Boolean" Default="True" Optional="False" Category="Optional" Description="neu set true thi asp.net control se duoc tao." %>


<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%%--   
Author:					<%= Author %>
Created:				<%= DateTime.Now.Year.ToString() %>-<%= DateTime.Now.Month.ToString() %>-<%= DateTime.Now.Day.ToString() %>
Last Modified:			<%= DateTime.Now.Year.ToString() %>-<%= DateTime.Now.Month.ToString() %>-<%= DateTime.Now.Day.ToString() %>
 --%>
<% if (SourceTable.PrimaryKey == null) throw new ApplicationException("chua chon bang vao SourceTable."); %>
<% ColumnSchema primaryKey = SourceTable.PrimaryKey.MemberColumns[0]; %>
<%%@ Control Language="C#" AutoEventWireup="true" CodeBehind="List<% =GetClassName() %>Control.ascx.cs"
    Inherits="<%= Inherits %>.List<% =GetClassName() %>Control" %>

<asp:UpdateProgress ID="UpdateProgress1" runat="Server" AssociatedUpdatePanelID="UpdatePanelShow<% =GetClassName() %>_on">
    <ProgressTemplate >
        <span style=" position:fixed; z-index:9999; top:48%;left:48%;  "><img src="<%%=ResolveUrl("~/") %>Resources/img/waiting.gif" alt="Vui lòng đợi..." height="80px" width="80px" /></span>
    </ProgressTemplate>
</asp:UpdateProgress>
<asp:UpdatePanel ID="UpdatePanelShow<% =GetClassName() %>_on" runat="server" UpdateMode="Conditional"
    ChildrenAsTriggers="false">
    <ContentTemplate>
          <div class="row">
              <asp:Panel ID="pnlSearch" DefaultButton="ButtonSearch"  runat="server">
                    <div class="col-sm-3 m-b-5 ">
                        <div class="input-group">
                            <asp:TextBox ID="TextBoxValueSearch" runat="server" CssClass="form-control w-full"
                                placeholder="Nhập chuỗi tìm kiếm ..."></asp:TextBox>
                            <span class="input-group-btn">
                                <asp:LinkButton ID="ButtonSearch" runat="server" Text="" CssClass="btn btn-primary"><i class="fa fa-search"></i>
                                </asp:LinkButton>
                            </span>
                        </div>
                    </div>
                </asp:Panel>
          
                <div class="col-sm-9 m-b-5 p-w-5">
                    <div class="pull-right">
                        <asp:LinkButton ID="ButtonAdd" runat="server" ToolTip="Thêm mới" CssClass="btn btn-add"><i class="fa fa-file-o"></i>&nbsp; Thêm mới </asp:LinkButton>
                        <asp:LinkButton ID="ButtonDelete" OnClientClick="return confirm('Hệ thống sẽ xóa tất cả dữ liệu được chọn. Bạn có chắc muôn xóa?');" runat="server" ToolTip="Xóa" CssClass="btn btn-delete"><i class="fa fa-trash-o"></i>&nbsp;Xóa</asp:LinkButton>
                    </div>
                </div>
          </div>
      
        <div class="row">
                <div class="col-sm-12">
                <div class="ibox float-e-margins">
                    <div class="ibox-content">
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr >
                                        <th class="text-center" style="width:50px">
                                            <input id="CheckBoxAll" onclick="javascript:SelectAllCheckboxes(this,'Repeater<% =GetClassName() %>');"
                                                runat="server" type="checkbox" />
                                        </th>
                                        <th class="text-center" style="width:50px">
                                            STT
                                        </th>
                                        <th>
                                            <%= SourceTable.Columns[1].Name %>
                                        </th>
                                        <th class="text-center" style="width:80px">
                                            Tác vụ
                                        </th>
                                    </tr>
                                </thead>
                                <asp:Repeater ID="Repeater<% =GetClassName() %>" runat="server">
                                    <ItemTemplate>
                                        <tr class="showhim" data="<%%# Eval("<%= SourceTable.PrimaryKey.MemberColumns[0].Name %>")%>">
                                            <td class="text-center " >
                                                <asp:CheckBox ID="CheckBoxSelect" runat="server" />
                                                <asp:Literal ID="Literal<%= SourceTable.PrimaryKey.MemberColumns[0].Name %>" runat="server" Text='<%%# Eval("<%= SourceTable.PrimaryKey.MemberColumns[0].Name %>")%>'
                                                    Visible="false"></asp:Literal>
                                            </td>
                                            <td class="text-center">
                                                <%%# Container.ItemIndex + 1 + (PageNumber - 1) * PageSize%>
                                            </td>
                                            <td class="text-left">
                                                <%%# Eval("<%= SourceTable.Columns[1].Name %>")%>
                                            </td>
                                            <td class="text-center">
                                                <asp:LinkButton  ID="LinkButtonItem" CssClass="fg-cyan" runat="server" CommandName="EDIT" CommandArgument='<%%# Eval("<%= SourceTable.PrimaryKey.MemberColumns[0].Name %>")%>'><i class="glyphicon glyphicon-edit"></i>&nbsp;Sửa </asp:LinkButton>
                                            </td>
                                        </tr>
                                    </ItemTemplate>
                                </asp:Repeater>
                               <tfoot>
                                <tr>
                                    <th colspan="4">
                                        <div class="form-inline">
                                                <div class="pull-left" >
                                                    <MyC:mojoCutePager ID="mojoCutePager1" runat="server" CssClass="" />
                                                </div>
                                                
                                        </div>
                                        <div class=" pull-right">
                                                <div class="form-group">
                                                    <asp:DropDownList ID="DropDownListPageNumber" runat="server" AutoPostBack="true"
                                                        CssClass="form-control  width-size-100">
                                                    </asp:DropDownList>
                                                </div>
                                         </div>
                                    </th>
                                </tr>
                                </tfoot>
                            </table>
                        </div> 
                    </div> 
                </div> 
            </div> 
        </div>
    </ContentTemplate>
    <Triggers>
        <asp:AsyncPostBackTrigger ControlID="ButtonAdd" EventName="Click" />
        <asp:AsyncPostBackTrigger ControlID="ButtonDelete" EventName="Click" />
        <asp:AsyncPostBackTrigger ControlID="DropDownListPageNumber" EventName="SelectedIndexChanged" />
        <asp:AsyncPostBackTrigger ControlID="mojoCutePager1" EventName="Command" />
    </Triggers>
</asp:UpdatePanel>

<script src="<%%=ResolveUrl("~/") %>Resources/js/jquery-2.1.1.js" type="text/javascript"></script>
<script type="text/javascript">


    function loadSelect() {
        $('.showhim').click(function () {
            var bb = $(this).attr("data");
            $.cookie('aaa', bb);

            var a = $('tr');
            $(a).removeClass('current');

            if (bb) {
                var a = $('tr[data="' + bb + '"]');
                $(a).addClass('current');
            }
        });

        var thisLink = $.cookie('aaa');
        if (thisLink) {
            var a = $('tr[data="' + thisLink + '"]');
            $(a).addClass('current');
        }
    }
    $(document).ready(loadSelect);
    Sys.WebForms.PageRequestManager.getInstance().add_endRequest(loadSelect);
</script>
         
<script runat="template">


public string GetClassName()
{
	
	if ((this.RemoveEndingS)
		&&(SourceTable.Name.EndsWith("s"))
		)
	{
		return RemovePrefix(SourceTable.Name.Substring(0,SourceTable.Name.Length -1));
	}
	else
	{
		return RemovePrefix(SourceTable.Name);
	}
}

public string RemovePrefix(string TableName)
{

	return TableName.Replace(TablePrefix,"");
}

public string GetPrivateName(string ColumnName)
{
	

	return ColumnName.Substring(0,1).ToLower() + ColumnName.Substring(1,ColumnName.Length -1);
}

public string GetParamName(String columnName)
{
	if(columnName == "ID")
		return "id";
	
	string firstLetter = columnName.Substring(0,1).ToLower();
	string Result = firstLetter + columnName.Remove(0,1);
	
	return Result;
}

public string GetDefaultValueString(ColumnSchema column)
{
	switch(column.DataType)
	{	
		case DbType.Guid: 
			return " = Guid.Empty";
		
		case DbType.Int32 : 
			return " = -1";
		
		case DbType.AnsiString :
		case DbType.AnsiStringFixedLength :
		case DbType.String :
		case DbType.StringFixedLength :
		
			return " = string.Empty";
		
		default:
		{
			return string.Empty;
		}
		
	}
	
	
	

}

public bool IsComparible(ColumnSchema column)
{
	switch(GetSqlDbType(column))
	{
		case "Char" :
		case "NChar" :
		case "VarChar" :
		case "NVarChar" :
		case "Text" :
		case "NText" :
		case "Int" :
		case "DateTime" :
		return true;
		
		break;
	
		default:
			return false;
		
	}
	
	
	

}

public string GetReaderConversion(ColumnSchema column)
{
	if (column.Name.EndsWith("TypeCode")) return column.Name;
	
	switch (column.DataType)
	{
		case DbType.AnsiString: return "reader[\"" + column.Name + "\"].ToString();";
		case DbType.AnsiStringFixedLength: return "reader[\"" + column.Name + "\"].ToString();";
		case DbType.Binary: return "Byte[]";
		case DbType.Boolean: return "Convert.ToBoolean(reader[\"" + column.Name + "\"]);";
		case DbType.Byte: return "Convert.ToByte(reader[\"" + column.Name + "\"]);";
		case DbType.Currency: return "Convert.ToDecimal(reader[\"" + column.Name + "\"]);";
		case DbType.Date: return "Convert.ToDateTime(reader[\"" + column.Name + "\"]);";
		case DbType.DateTime: return "Convert.ToDateTime(reader[\"" + column.Name + "\"]);";
		case DbType.Decimal: return "Convert.ToDecimal(reader[\"" + column.Name + "\"]);";
		case DbType.Double: return "Convert.ToDouble(reader[\"" + column.Name + "\"]);";
		case DbType.Guid: return "new Guid(reader[\"" + column.Name + "\"].ToString());";
		case DbType.Int16: return "Convert.ToInt16(reader[\"" + column.Name + "\"]);";
		case DbType.Int32: return "Convert.ToInt32(reader[\"" + column.Name + "\"]);";
		case DbType.Int64: return "Convert.ToInt64(reader[\"" + column.Name + "\"]);";
		case DbType.SByte: return "Convert.ToSByte(reader[\"" + column.Name + "\"]);";
		case DbType.Single: return "Convert.ToSingle(reader[\"" + column.Name + "\"]);";
		case DbType.String: return "reader[\"" + column.Name + "\"].ToString();";
		case DbType.StringFixedLength: return "reader[\"" + column.Name + "\"].ToString();";
		
		default:
		{
			return "__UNKNOWN__" + column.NativeType;
		}
	}
}



public string GetVBDataType(ColumnSchema column)
{
	if (column.Name.EndsWith("TypeCode")) return column.Name;
	
	switch (column.DataType)
	{
		case DbType.AnsiString: return "String";
		case DbType.AnsiStringFixedLength: return "String";
		case DbType.Binary: return "Byte()";
		case DbType.Boolean: return "Boolean";
		case DbType.Byte: return "Byte";
		case DbType.Currency: return "Decimal";
		case DbType.Date: return "DateTime";
		case DbType.DateTime: return "DateTime";
		case DbType.Decimal: return "Decimal";
		case DbType.Double: return "Double";
		case DbType.Guid: return "Guid";
		case DbType.Int16: return "Short";
		case DbType.Int32: return "Integer";
		case DbType.Int64: return "Long";
		case DbType.Object: return "Object";
		case DbType.SByte: return "SByte";
		case DbType.Single: return "Float";
		case DbType.String: return "String";
		case DbType.StringFixedLength: return "String";
		case DbType.Time: return "TimeSpan";
		case DbType.UInt16: return "UShort";
		case DbType.UInt32: return "UInt";
		case DbType.UInt64: return "ULong";
		case DbType.VarNumeric: return "Decimal";
		default:
		{
			return "__UNKNOWN__" + column.NativeType;
		}
	}
}
	
</script>